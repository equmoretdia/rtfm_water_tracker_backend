{
  "openapi": "3.0.1",

  "info": {
    "version": "1.0.0",
    " title": "Swagger  ",
    "description": "Api documentation for water tracker ",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [{ "url": "http://localhost:8080" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication  endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints, information about user "
    },
    {
      "name": "WaterRate",
      "description": "WaterRate endpoints, calculation of the daily norm "
    },
    {
      "name": "Water",
      "description": "Water endpoints, saving information about of consumed water "
    },
    {
      "name": "Today",
      "description": "Today  endpoints, current information for the day of used water"
    },
    {
      "name": "Month",
      "description": "Month endpoints,information for the month of used water "
    }
  ],

  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        " parameters": [],

        "requestBody": {
          "description": "Description of parameters : email - must to be string, password min 8 max 64, password -string, encrypted user password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        " parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Description of parameters : email - must to be string, password min 8 max 64, password -string, encrypted user password, token -string",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            " content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        " parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "logout object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationResponse"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          }
        }
      }
    },

    "/api/user-settings/current": {
      "get": {
        "tags": ["User"],
        "summary": "User information",
        " parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",

          "content": {
            "application/json": {}
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "File not found",
            "content": {}
          }
        }
      }
    },
    "/api/user-settings/edit": {
      "patch": {
        "tags": ["User"],
        "summary": "Update information",
        " parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateInformation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateInformation"
                }
              }
            }
          },
          "409": {
            "description": "Email is already in use",
            "content": {}
          },
          "400": {
            "description": "To change the password, provide both outdatedPassword and newPassword",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "401": {
            "description": "Current password is incorrect",
            "content": {}
          }
        }
      }
    },
   
    "/api/water/": {
      "post": {
        "tags": ["Water"],
        "summary": "Add water",
        " parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bed request",
            "content": {}
          }
        }
      }
    },
    "/api/water/{id}": {
  "patch": {
    "tags": ["Water"],
    "summary": "Update water",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "The unique identifier of the water record",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    ],
    "security": [{ "Bearer": [] }],
    "requestBody": {
      "description": "Description for update water",
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/UpdateWater"
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Successful",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateWater"
            }
          }
        }
      },
      "404": {
        "description": "Not Found"
      }
    }
  },
  "delete": {
    "tags": ["Water"],
    "summary": "Delete information about water",
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "description": "The unique identifier of the water record",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    ],
    "security": [{ "Bearer": [] }],
    "responses": {
      "200": {
        "description": "Successful deletion",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DeleteWaterResponse"
            }
          }
        }
      },
      "404": {
        "description": "Not Found"
      }
    }
  }
},

    "/api/water/today": {
      "get": {
        "tags": ["Today"],
        "summary": "Information about daily water requirement",
        " parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DateWaterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodayWaterResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/api/water/month": {
      "get": {
        "tags": ["Month"],
        "summary": "Information about monthly water norm",
        " parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DateWaterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterMonthResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {}
          }
        }
      }
    },
    "/api/water-rate/": {
      "patch": {
        "tags": ["WaterRate"],
        "summary": "Calculation of daily rate water ",
        " parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRateResponse"
                }
              }
            }
          },
          "400": {
            "description": "bed request",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password min 8 max 64",
            "example": "1234567890"
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "items": {
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "_id": {
              "type": "string",
              "description": "User's id",
              "example": "32143232436545474"
            },
            "avatarURL": {
              "type": "string",
              "description": "URL to the user's avatar"
            }
          }
        },
        "example": [
          {
            "email": "qwerty123@gmail.com",
            "userId": "2325454214344",
            "avatarURL": "http://example.com/avatar"
          }
        ]
      },

      "WaterRateRequest": {
        "type": "object",
        "required": ["waterRate"],
        "properties": {
          "waterRate": {
            "type": "number",
            "description": "amount of water"
            
          },
          "date": {
            "type": "string",
            "description": "Chose date and time",
            "format": "date-time"
            
          }
        },
        "example": {
          "waterRate": 2000,
          "date": "2024-05-01T00:00:00Z"
        }
      },

      "WaterRateResponse": {
        "type": "object",
        "items": {
          "properties": {
            "waterRate": {
              "type": "number",
              "description": "amount of water",
              "format": "number"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "owner": {
              "type": "number",
              "description": "id number"
            },
            "userId": {
              "type": "string",
              "description": "User's id",
              "example": "660947c259f184ad0942f234"
            }
          }
        },
        "example": [
          {
            "userId": "660947c259f184ad0942f234",
            "waterRate": 2000,
            "date": "2024-05-01T00:00:000z",
            "owner": "number"
          }
        ]
      },

      "UserResponse": {
        "type": "object",
        "items": {
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "format": "string"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "gender": {
              "type": "string",
              "description": "User's gender",
              "format": "string"
            },
            "avatarURL": {
              "type": "string",
              "description": "URL to the user's avatar"
            }
          }
        },
        "example": [
          {
            "name": "Kevin",
            "email": "2@gmail.com",
            "gender": "female",
            "avatarURL": "http://example.com/avatar"
          }
        ]
      },

     "UserUpdateInformation": {
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "User's name"
    },
    "email": {
      "type": "string",
      "description": "User's email",
      "format": "email"
    },
    "gender": {
      "type": "string",
      "description": "User's gender"
    },
    "avatarURL": {
      "type": "string",
      "description": "URL to the user's avatar"
    },
    "userId": {
      "type": "string",
      "description": "User id"
    }
  },
  "example": {
    "name": "Kevin",
    "email": "2@gmail.com",
    "gender": "female",
    "avatarURL": "http://example.com/avatar"
  }
},

      "AddWaterRequest": {
        "type": "object",
        "required": ["amount", "date"],
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount of water"
          },
          "date": {
            "type": "string",
            "description": "Chose the date ",
            "format": "date-time"
          }
        },
        "example": {
          "amount": 400,
          "date": "2024-05-01T00:00:00Z"
        }
      },

      "AddWaterResponse": {
        "type": "object",
        "items": {
          "properties": {
            "amount": {
              "type": "number",
              "description": "Amount water",
              "required": ["amount"],
              "format": "number"
            },
            "date": {
              "type": "string",
              "description": "Chose date",
              "required": ["date"],
              "format": "date-time"
            },
            "owner": {
              "type": "string",
              "description": "id user",
              "format": "string"
            },
            "userId": {
              "type": "string",
              "description": "User id",
              "format": "string"
            }
          }
        },
        "example": [
          {
            "amount": 400,
            "date": "2024-05-01T00:00:000z",
            "owner": "30459479hg345",
            "userId": "35465765843y43456"
          }
        ]
      },

      "DateWaterRequest": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Chose date",
            "required": ["date"],
            "format": "date-time",
            "example": "2024-05-01T00:00:00Z"
          }
        }
      },

      "TodayWaterResponse": {
        "type": "object",
        "properties": {
          "waterPercent": {
            "type": "number",
            "description": "Percent of water "
          },
          "waterRecords": {
            "type": "array",
            "description": "amount of water consumed",
            "items": {
              "type": "object",
              "properties": {
                "consumedWater": {
                  "type": "number",
                  "description": ""
                },
                "date": {
                  "type": "string",
                  "description": "Day of recoding",
                  "format": "date-time",
                  "example": "2024-05-01T00:00:00Z"
                }
              }
            }
          }
        },

        "example": [
          {
            "waterPercent": 103,
            "waterRecords": [
              {
                "consumedWater": 1100,
                "date": "2024-05-01T00:00:000z"
              },
              {
                "consumedWater": 1100,
                "date": "2024-05-01T00:00:000z"
              }
            ]
          }
        ]
      },

      "WaterMonthResponse":{
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Chose the date ",
            "format": "date-time"
          },
          "waterRate": {
            "type": "number",
            "description": "Amount of water"
          },
          "percentage": {
            "type": "number",
            "description": "Percent of water "
          },
          "totalIntake": {
            "type": "number"
          }
        },
        "example": {
          "date": "2024-05-01T00:00:00Z",
          "waterRate": 5000,
          "percentage": 18,
          "totalIntake": 1
        }
      },
        "UpdateWater":{
          "type": "object",
          "properties": {
            "amount": {
              "type": "number",
              "description": "Amount of water"
            },
            "date": {
              "type": "string",
              "description": "Chose the date ",
              "format": "date-time"
            }
          },
          "example": {
            "amount": 400,
            "date": "2024-05-01T00:00:00Z"
          }
        },

        "DeleteWaterResponse":{
           "type": "object",
        "items": {
          "properties": {
            "amount": {
              "type": "number",
              "description": "Amount water",
              "required": ["amount"],
              "format": "number"
            },
            "date": {
              "type": "string",
              "description": "Chose date",
              "required": ["date"],
              "format": "date-time"
            },
            "owner": {
              "type": "string",
              "description": "id user",
              "format": "string"
            },
            "userId": {
              "type": "string",
              "description": "User id",
              "format": "string"
            }
          }
        },
        "example": [
          {
            "amount": 400,
            "date": "2024-05-01T00:00:000z",
            "owner": "30459479hg345",
            "userId": "35465765843y43456"
          }]
        },

      "idUserRequest": {
        "_id": {
          "type": "string",
          "description": "User's id",
          "example": "660947c259f184ad0942f234"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
